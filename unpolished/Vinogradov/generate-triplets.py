import sys, mathTO = int(sys.argv[1])primes = []def loadPrimes():    with open("primes_lt_256-cubed.txt") as f:        for line in f:            line = line.rstrip()            A = line.split(' ')            for s in A:                if len(s) > 0:                    primes.append(int(s))#loadPrimes()def genRange(idxStart, idxStop):    R = []    for i in range(idxStart, idxStop-2):        for j in range(i + 1, idxStop-1):            for k in range(j + 1, idxStop):                num = primes[i] + primes[j] + primes[k]                R.append( (num, primes[i], primes[j], primes[k]) )    return Rdef runTo(N):        R = genRange(0, N+1)        R.sort()        print(repr(R))        print(str(len(R)))        C = [0] * (R[len(R)-1][0] + 1)        for i in range(len(R)):            C[R[i][0]] = C[R[i][0]] + 1                    print(repr(C))                runTo(TO)